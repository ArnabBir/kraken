# Fallback Dockerfile for completely air-gapped environments
# This version requires all tools to be pre-installed on host and mounted
FROM docker.phonepe.com/ubuntu

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Create simple shell script replacements for missing tools
RUN echo '#!/bin/bash' > /usr/bin/redis-server && \
    echo 'echo "Redis server simulation - replace with real redis-server"' >> /usr/bin/redis-server && \
    echo 'sleep infinity' >> /usr/bin/redis-server && \
    chmod +x /usr/bin/redis-server

RUN echo '#!/bin/bash' > /usr/bin/envsubst && \
    echo '# Simple envsubst replacement using sed' >> /usr/bin/envsubst && \
    echo 'if [ $# -eq 0 ]; then' >> /usr/bin/envsubst && \
    echo '  # Read from stdin' >> /usr/bin/envsubst && \
    echo '  cat | sed "s/\${REDIS_PORT}/14001/g; s/\${BIND_ADDRESS}/0.0.0.0/g; s/\${TESTFS_PORT}/14000/g; s/\${HERD_HOST_IP}/localhost/g; s/\${HOSTNAME}/localhost/g"' >> /usr/bin/envsubst && \
    echo 'else' >> /usr/bin/envsubst && \
    echo '  # Read from file' >> /usr/bin/envsubst && \
    echo '  sed "s/\${REDIS_PORT}/14001/g; s/\${BIND_ADDRESS}/0.0.0.0/g; s/\${TESTFS_PORT}/14000/g; s/\${HERD_HOST_IP}/localhost/g; s/\${HOSTNAME}/localhost/g" "$1"' >> /usr/bin/envsubst && \
    echo 'fi' >> /usr/bin/envsubst && \
    chmod +x /usr/bin/envsubst

RUN echo '#!/bin/bash' > /usr/bin/curl && \
    echo '# Simple curl replacement' >> /usr/bin/curl && \
    echo 'if which wget >/dev/null 2>&1; then' >> /usr/bin/curl && \
    echo '  wget -O- "$@"' >> /usr/bin/curl && \
    echo 'else' >> /usr/bin/curl && \
    echo '  echo "Neither curl nor wget available"' >> /usr/bin/curl && \
    echo '  exit 1' >> /usr/bin/curl && \
    echo 'fi' >> /usr/bin/curl && \
    chmod +x /usr/bin/curl

RUN mkdir -p -m 777 /var/log/kraken/kraken-build-index
RUN mkdir -p -m 777 /var/log/kraken/kraken-origin
RUN mkdir -p -m 777 /var/log/kraken/kraken-proxy
RUN mkdir -p -m 777 /var/log/kraken/kraken-testfs
RUN mkdir -p -m 777 /var/log/kraken/kraken-tracker
RUN mkdir -p -m 777 /var/log/kraken/redis-server

RUN mkdir -p -m 777 /var/cache/kraken/kraken-build-index
RUN mkdir -p -m 777 /var/cache/kraken/kraken-origin
RUN mkdir -p -m 777 /var/cache/kraken/kraken-proxy
RUN mkdir -p -m 777 /var/cache/kraken/kraken-testfs
RUN mkdir -p -m 777 /var/cache/kraken/kraken-tracker

RUN mkdir -p -m 777 /var/run/kraken

ARG USERNAME="root"
ARG USERID="0"
RUN if [ ${USERID} != "0" ]; then useradd --uid ${USERID} ${USERNAME}; fi

# Allow proxy to run nginx as root.
RUN if [ ${USERID} != "0" ]; then mkdir -p /etc/sudoers.d/ && \
    echo '${USERNAME}  ALL=(root) NOPASSWD: /usr/sbin/nginx' >> /etc/sudoers.d/kraken-proxy; fi

COPY ./docker/setup_nginx.sh /tmp/setup_nginx.sh
RUN /tmp/setup_nginx.sh ${USERNAME}

COPY ./build-index/build-index /usr/bin/kraken-build-index
COPY ./origin/origin           /usr/bin/kraken-origin
COPY ./proxy/proxy             /usr/bin/kraken-proxy
COPY ./tools/bin/testfs/testfs /usr/bin/kraken-testfs
COPY ./tracker/tracker         /usr/bin/kraken-tracker

RUN chmod +x /usr/bin/kraken-build-index && \
    chmod +x /usr/bin/kraken-origin && \
    chmod +x /usr/bin/kraken-proxy && \
    chmod +x /usr/bin/kraken-testfs && \
    chmod +x /usr/bin/kraken-tracker

USER ${USERNAME}

WORKDIR /etc/kraken

COPY ./config /etc/kraken/config
COPY ./nginx/config /etc/kraken/nginx/config
COPY ./test/tls /etc/kraken/tls
