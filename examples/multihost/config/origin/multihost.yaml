zap:
  level: info
  development: false
  encoding: console
  disableStacktrace: true
  encoderConfig:
    messageKey: message
    nameKey: logger_name
    levelKey: level
    timeKey: ts
    callerKey: caller
    stacktraceKey: stack
    levelEncoder: capital
    timeEncoder: iso8601
    durationEncoder: seconds
    callerEncoder: short
  outputPaths:
    - stdout
    - /var/log/kraken/kraken-origin/stdout.log
  errorOutputPaths:
    - stdout
    - /var/log/kraken/kraken-origin/stdout.log

metainfogen:
  piece_lengths:
    0: 4MB # Use 4MB piece lengths for all file sizes (for now).

peer_id_factory: addr_hash

scheduler:
  log:
    timeEncoder: iso8601
  torrentlog:
    disable: true

metrics:
  m3:
    service: kraken-origin

localdb:
  source: /var/cache/kraken/kraken-origin/origin.db

castore:
  upload_dir: /var/cache/kraken/kraken-origin/upload/
  cache_dir:  /var/cache/kraken/kraken-origin/cache/

blobserver:
  listener:
    net: unix
    addr: /tmp/kraken-origin.sock

nginx:
  name: kraken-origin
  cache_dir: /var/cache/kraken/kraken-origin/nginx/
  log_dir: /var/log/kraken/kraken-origin/

backends:
  - namespace: library/.*
    backend:
      registry_blob:
        address: index.docker.io
        security:
          basic:
            username: ""
            password: ""
  - namespace: company/.*
    backend:
      testfs:
        addr: ${HERD_HOST_IP}:14000
        root: blobs
        name_path: identity
  - namespace: .*
    backend:
      testfs:
        addr: ${HERD_HOST_IP}:14000
        root: blobs
        name_path: identity

cluster:
  static:
    - ${HERD_HOST_IP}:15002

hashring:
  max_replica: 2

writeback:
  retry_interval: 100ms
  poll_retries_interval: 250ms

tls:
  name: kraken
  server:
    disabled: true
  client:
    disabled: true
