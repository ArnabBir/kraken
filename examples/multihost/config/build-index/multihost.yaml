localdb:
  source: /var/cache/kraken/kraken-build-index/index.db

store:
  upload_dir: /var/cache/kraken/kraken-build-index/upload/
  cache_dir: /var/cache/kraken/kraken-build-index/cache/

tag_store:
  write_through: true

zap:
  level: info
  development: false
  encoding: console
  disableStacktrace: true
  encoderConfig:
    messageKey: message
    nameKey: logger_name
    levelKey: level
    timeKey: ts
    callerKey: caller
    stacktraceKey: stack
    levelEncoder: capital
    timeEncoder: iso8601
    durationEncoder: seconds
    callerEncoder: short
  outputPaths:
    - stdout
    - /var/log/kraken/kraken-build-index/stdout.log
  errorOutputPaths:
    - stdout
    - /var/log/kraken/kraken-build-index/stdout.log

metrics:
  m3:
    service: kraken-build-index

tagserver:
  listener:
    net: unix
    addr: /tmp/kraken-build-index.sock

nginx:
  name: kraken-build-index
  cache_dir: /var/cache/kraken/kraken-build-index/nginx/
  log_dir: /var/log/kraken/kraken-build-index/

backends:
  - namespace: library/.*
    backend:
      registry_tag:
        address: index.docker.io
        security:
          basic:
            username: ""
            password: ""
  - namespace: .*
    backend:
      testfs:
        addr: ${HERD_HOST_IP}:14000
        root: tags
        name_path: docker_tag

cluster:
  hosts:
    static:
      - ${HERD_HOST_IP}:15004

origin:
  hosts:
    static:
      - ${HERD_HOST_IP}:15002

remotes: {}

tag_replication:
  retry_interval: 100ms
  poll_retries_interval: 250ms

tag_types:
  - namespace: .*
    type: docker
    root: tags

tag_store:
  write_through: false

writeback:
  retry_interval: 100ms
  poll_retries_interval: 250ms

nginx:
  cache_dir: /tmp/kraken-build-index-nginx/

tls:
  name: kraken
  server:
    disabled: true
  client:
    disabled: true
