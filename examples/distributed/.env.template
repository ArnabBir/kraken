# Kraken Distributed Cluster - Environment Configuration Template
# Copy this file to .env and customize for your environment

# =============================================================================
# CLUSTER CONFIGURATION
# =============================================================================

# Cluster node IP addresses (modify for your environment)
CLUSTER_NODE_1=127.0.0.1
CLUSTER_NODE_2=127.0.0.1
CLUSTER_NODE_3=127.0.0.1

# External/Public IP for agent connections (if different from cluster nodes)
PUBLIC_IP_NODE_1=127.0.0.1
PUBLIC_IP_NODE_2=127.0.0.1
PUBLIC_IP_NODE_3=127.0.0.1

# =============================================================================
# SERVICE PORTS
# =============================================================================

# Core service ports (per node)
ORIGIN_PORT=8080
TRACKER_PORT=8081
BUILD_INDEX_PORT=8082
PROXY_PORT=8083
REDIS_PORT=6379

# Load balancer ports (external access)
LB_PROXY_PORT=5000
LB_TRACKER_PORT=5003

# Agent communication port (on agent VMs)
AGENT_PORT=8080

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker registry for Kraken images
DOCKER_REGISTRY=gcr.io/uber-container-tools
KRAKEN_VERSION=latest

# Container resource limits
MEMORY_LIMIT=1g
CPU_LIMIT=1.0

# Docker network
NETWORK_NAME=kraken-distributed

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Data persistence paths
DATA_ROOT=/tmp/kraken-distributed
BACKUP_DIR=/tmp/kraken-backups
LOG_DIR=/tmp/kraken-logs

# Origin storage configuration
ORIGIN_STORAGE_SIZE=10GB
CACHE_SIZE=1GB

# =============================================================================
# REDIS CLUSTER CONFIGURATION
# =============================================================================

# Redis cluster settings
REDIS_PASSWORD=
REDIS_MAX_MEMORY=512mb
REDIS_TIMEOUT=300
REDIS_TCP_KEEPALIVE=60

# Cluster slots (16384 total, distributed across 3 nodes)
REDIS_SLOTS_NODE1=0-5460
REDIS_SLOTS_NODE2=5461-10922
REDIS_SLOTS_NODE3=10923-16383

# =============================================================================
# LOAD BALANCER CONFIGURATION
# =============================================================================

# NGINX configuration
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024
NGINX_KEEPALIVE_TIMEOUT=65

# Health check settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=5s
MAX_FAILS=3
FAIL_TIMEOUT=30s

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# TLS/SSL settings (set to true for production)
ENABLE_TLS=false
CERT_PATH=/etc/ssl/certs/kraken.crt
KEY_PATH=/etc/ssl/private/kraken.key

# Authentication (if required)
ENABLE_AUTH=false
AUTH_SECRET=your-secret-key-here

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Log levels: debug, info, warn, error
LOG_LEVEL=info

# Metrics collection
ENABLE_METRICS=true
METRICS_PORT=9090

# Auto-recovery settings
RECOVERY_ENABLED=true
CHECK_INTERVAL=30
MAX_RECOVERY_ATTEMPTS=3

# Performance monitoring
ENABLE_PERFORMANCE_MONITORING=true
METRICS_RETENTION_DAYS=7

# =============================================================================
# AGENT CONFIGURATION
# =============================================================================

# Agent deployment settings
AGENT_INSTALL_DIR=/opt/kraken
AGENT_CONFIG_DIR=/etc/kraken
AGENT_LOG_DIR=/var/log/kraken

# Agent-specific settings
CONCURRENT_DOWNLOADS=4
UPLOAD_TIMEOUT=300s
DOWNLOAD_TIMEOUT=600s

# Peer connection settings
MAX_PEERS=50
PEER_TIMEOUT=30s

# =============================================================================
# DEVELOPMENT/TESTING CONFIGURATION
# =============================================================================

# Development mode settings
DEV_MODE=false
DEBUG_PORT=2345

# Test configuration
RUN_TESTS=false
TEST_IMAGE=alpine:latest
TEST_REGISTRY=docker.io

# =============================================================================
# PRODUCTION OPTIMIZATIONS
# =============================================================================

# Container optimizations
DISABLE_SWAP=true
OPTIMIZE_NETWORK=true
TUNE_FILESYSTEM=true

# Resource monitoring
CPU_ALERT_THRESHOLD=80
MEMORY_ALERT_THRESHOLD=85
DISK_ALERT_THRESHOLD=90

# Backup configuration
AUTO_BACKUP=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================

# Container registry integration
REGISTRY_URL=your-registry.com
REGISTRY_USERNAME=
REGISTRY_PASSWORD=

# Notification settings (for alerts)
SLACK_WEBHOOK_URL=
EMAIL_ALERTS=false
SMTP_SERVER=
SMTP_PORT=587
ALERT_EMAIL=admin@company.com

# =============================================================================
# CUSTOM OVERRIDES
# =============================================================================

# Add any environment-specific overrides below
# These will take precedence over the above settings

# Example: Production environment overrides
# CLUSTER_NODE_1=10.0.1.10
# CLUSTER_NODE_2=10.0.1.11
# CLUSTER_NODE_3=10.0.1.12
# ENABLE_TLS=true
# LOG_LEVEL=warn
